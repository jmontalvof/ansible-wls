---
- name: Preparar entorno para despliegue WebLogic
  hosts: weblogic_servers
  gather_facts: true
  vars_files:
    - "../vars/{{ app_name }}.yml"

  pre_tasks:
    - name: Validar parámetros obligatorios
      assert:
        that:
          - app_name is defined
          - app_version is defined
        fail_msg: "Los parámetros app_name y app_version son obligatorios"

  tasks:
    - name: Definir variables derivadas
      set_fact:
        war_file: "{{ app_config.name }}-{{ app_config.version }}.war"
        war_path: "{{ paths.deploy_dir }}/{{ app_config.name }}/{{ war_file }}"
        full_nexus_url: "{{ nexus_config.url }}/{{ app_config.nexus_path }}/{{ app_config.name }}/{{ app_config.version }}/{{ war_file }}"

    - name: Crear estructura de directorios
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ paths.deploy_dir }}/{{ app_config.name }}"
        - "{{ paths.logs_dir }}"

    - name: Verificar disponibilidad de WebLogic Admin Server
      wait_for:
        port: 7001
        host: "{{ inventory_hostname }}"
        timeout: 60
        delay: 5

    - name: Descargar artefacto desde Nexus
      get_url:
        url: "{{ full_nexus_url }}"
        dest: "{{ war_path }}"
        mode: '0644'
        url_username: "{{ nexus_config.credentials.username }}"
        url_password: "{{ nexus_config.credentials.password }}"
        validate_certs: no
      register: download_result
      retries: 3
      delay: 10
      until: download_result is succeeded

    - name: Validar integridad del artefacto
      stat:
        path: "{{ war_path }}"
      register: war_stat

    - name: Calcular checksum SHA256
      command: "sha256sum {{ war_path }}"
      register: sha256_result
      changed_when: false
      when: war_stat.stat.exists

    - name: Verificar checksum
      assert:
        that:
          - sha256_result.stdout.split(' ')[0] == security.expected_sha256
        fail_msg: "El checksum del WAR no coincide con el esperado"
        success_msg: "Checksum validado correctamente"
      when: war_stat.stat.exists

    - name: Registrar preparación en log
      block:
        - name: Crear contenido del log
          template:
            src: templates/prepare_log.j2
            dest: "{{ paths.logs_dir }}/prepare_{{ app_config.name }}_{{ app_config.version }}.log"
            mode: '0644'

        - name: Recuperar log para Jenkins
          fetch:
            src: "{{ paths.logs_dir }}/prepare_{{ app_config.name }}_{{ app_config.version }}.log"
            dest: "logs/"
            flat: yes
      when: war_stat.stat.exists
